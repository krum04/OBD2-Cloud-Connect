{"ast":null,"code":"import _classCallCheck from \"/home/andy/Desktop/Python/rbs/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/andy/Desktop/Python/rbs/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/andy/Desktop/Python/rbs/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/andy/Desktop/Python/rbs/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/andy/Desktop/Python/rbs/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/andy/Desktop/Python/rbs/test/src/components/Login.jsx\";\n\n/* var firebase = require('firebase');\nvar firebaseui = require('firebaseui');\n\n// Initialize the FirebaseUI Widget using Firebase.\nvar ui = new firebaseui.auth.AuthUI(firebase.auth());\n\nui.start('#firebaseui-auth-container', {\n    signInOptions: [\n      firebase.auth.EmailAuthProvider.PROVIDER_ID\n    ],\n    // Other config options...\n  });\n  https://github.com/tylermcginnis/react-router-firebase-auth/blob/master/src/components/Login.js */\nimport React, { Component } from 'react';\nimport { login, resetPassword } from '/helpers/help';\n\nfunction setErrorMsg(error) {\n  return {\n    loginMessage: error\n  };\n}\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loginMessage: null\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      login(_this.email.value, _this.pw.value).catch(function (error) {\n        _this.setState(setErrorMsg('Invalid username/password.'));\n      });\n    };\n\n    _this.resetPassword = function () {\n      resetPassword(_this.email.value).then(function () {\n        return _this.setState(setErrorMsg(\"Password reset email sent to \".concat(_this.email.value, \".\")));\n      }).catch(function (error) {\n        return _this.setState(setErrorMsg(\"Email address not found.\"));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"col-sm-6 col-sm-offset-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \" Login \"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        ref: function ref(email) {\n          return _this2.email = email;\n        },\n        placeholder: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        placeholder: \"Password\",\n        ref: function ref(pw) {\n          return _this2.pw = pw;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), this.state.loginMessage && React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        role: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"glyphicon glyphicon-exclamation-sign\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Error:\"), \"\\xA0\", this.state.loginMessage, \" \", React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.resetPassword,\n        className: \"alert-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Forgot Password?\")), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Login\")));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };","map":{"version":3,"sources":["/home/andy/Desktop/Python/rbs/test/src/components/Login.jsx"],"names":["React","Component","login","resetPassword","setErrorMsg","error","loginMessage","Login","state","handleSubmit","e","preventDefault","email","value","pw","catch","setState","then"],"mappings":"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","sourcesContent":["/* var firebase = require('firebase');\nvar firebaseui = require('firebaseui');\n\n// Initialize the FirebaseUI Widget using Firebase.\nvar ui = new firebaseui.auth.AuthUI(firebase.auth());\n\nui.start('#firebaseui-auth-container', {\n    signInOptions: [\n      firebase.auth.EmailAuthProvider.PROVIDER_ID\n    ],\n    // Other config options...\n  });\n  https://github.com/tylermcginnis/react-router-firebase-auth/blob/master/src/components/Login.js */\n\n\nimport React, { Component } from 'react'\nimport { login, resetPassword } from '/helpers/help'\n\nfunction setErrorMsg(error) {\n  return {\n    loginMessage: error\n  }\n}\n\nexport default class Login extends Component {\n  state = { loginMessage: null }\n  handleSubmit = (e) => {\n    e.preventDefault()\n    login(this.email.value, this.pw.value)\n      .catch((error) => {\n          this.setState(setErrorMsg('Invalid username/password.'))\n        })\n  }\n  resetPassword = () => {\n    resetPassword(this.email.value)\n      .then(() => this.setState(setErrorMsg(`Password reset email sent to ${this.email.value}.`)))\n      .catch((error) => this.setState(setErrorMsg(`Email address not found.`)))\n  }\n  render () {\n    return (\n      <div className=\"col-sm-6 col-sm-offset-3\">\n        <h1> Login </h1>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label>Email</label>\n            <input className=\"form-control\" ref={(email) => this.email = email} placeholder=\"Email\"/>\n          </div>\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input type=\"password\" className=\"form-control\" placeholder=\"Password\" ref={(pw) => this.pw = pw} />\n          </div>\n          {\n            this.state.loginMessage &&\n            <div className=\"alert alert-danger\" role=\"alert\">\n              <span className=\"glyphicon glyphicon-exclamation-sign\" aria-hidden=\"true\"></span>\n              <span className=\"sr-only\">Error:</span>\n              &nbsp;{this.state.loginMessage} <a href=\"#\" onClick={this.resetPassword} className=\"alert-link\">Forgot Password?</a>\n            </div>\n          }\n          <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n        </form>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}