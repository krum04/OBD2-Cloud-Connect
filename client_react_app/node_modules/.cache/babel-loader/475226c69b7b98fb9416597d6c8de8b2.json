{"ast":null,"code":"import _classCallCheck from \"/home/andy/Desktop/rbs/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/andy/Desktop/rbs/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/andy/Desktop/rbs/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/andy/Desktop/rbs/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/andy/Desktop/rbs/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/andy/Desktop/rbs/test/src/components/DataGauge.jsx\";\nimport React, { Component } from 'react';\nimport { firebaseDatabase } from \"./firebase\";\nimport Gauge from \"react-svg-gauge\";\n\nvar DataGauge =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DataGauge, _Component);\n\n  function DataGauge(props) {\n    var _this;\n\n    _classCallCheck(this, DataGauge);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataGauge).call(this, props));\n    var key = String(_this.props.key);\n    console.log('This is props');\n    console.log(_this.props.name);\n    _this.firebaseDatabase = firebaseDatabase;\n    _this.database = _this.firebaseDatabase.ref(\"object\").child('SPEED');\n    _this.state = {\n      gaugeVal: 0\n    };\n    return _this;\n  }\n\n  _createClass(DataGauge, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.database.on(\"value\", function (snap) {\n        _this2.setState({\n          gaugeVal: snap.val()\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Gauge, {\n        value: this.state.gaugeVal,\n        min: this.props.minVal,\n        max: parseInt(this.props.maxVal),\n        label: this.props.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), console.log(this.state.gaugeVal));\n    }\n  }]);\n\n  return DataGauge;\n}(Component);\n\nexport { DataGauge as default };","map":{"version":3,"sources":["/home/andy/Desktop/rbs/test/src/components/DataGauge.jsx"],"names":["React","Component","firebaseDatabase","Gauge","DataGauge","props","key","String","console","log","name","database","ref","child","state","gaugeVal","on","snap","setState","val","minVal","parseInt","maxVal"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;IAGqBC,S;;;;;AAEnB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AACA,QAAIC,GAAG,GAAGC,MAAM,CAAC,MAAKF,KAAL,CAAWC,GAAZ,CAAhB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAKJ,KAAL,CAAWK,IAAvB;AACA,UAAKR,gBAAL,GAAwBA,gBAAxB;AACA,UAAKS,QAAL,GAAgB,MAAKT,gBAAL,CAAsBU,GAAtB,CAA0B,QAA1B,EAAoCC,KAApC,CAA0C,OAA1C,CAAhB;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AARiB;AAWlB;;;;wCACmB;AAAA;;AAClB,WAAKJ,QAAL,CAAcK,EAAd,CAAiB,OAAjB,EAA0B,UAAAC,IAAI,EAAI;AAChC,QAAA,MAAI,CAACC,QAAL,CAAc;AACZH,UAAAA,QAAQ,EAAEE,IAAI,CAACE,GAAL;AADE,SAAd;AAGD,OAJD;AAMD;;;6BAEO;AACN,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,KAAD;AACC,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,QADnB;AAEC,QAAA,GAAG,EAAE,KAAKV,KAAL,CAAWe,MAFjB;AAGC,QAAA,GAAG,EAAEC,QAAQ,CAAC,KAAKhB,KAAL,CAAWiB,MAAZ,CAHd;AAIC,QAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWK,IAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAOGF,OAAO,CAACC,GAAR,CAAY,KAAKK,KAAL,CAAWC,QAAvB,CAPH,CADA;AAWD;;;;EAnCoCd,S;;SAAlBG,S","sourcesContent":["import React, { Component } from 'react';\nimport { firebaseDatabase } from \"./firebase\";\nimport Gauge from \"react-svg-gauge\";\n\n\nexport default class DataGauge extends Component{\n\n  constructor(props) {\n    super(props);\n    var key = String(this.props.key)\n    console.log('This is props')\n    console.log(this.props.name)\n    this.firebaseDatabase = firebaseDatabase;\n    this.database = this.firebaseDatabase.ref(\"object\").child('SPEED');\n    \n    this.state = {\n      gaugeVal: 0,\n      };\n  }\n  componentDidMount() {\n    this.database.on(\"value\", snap => {\n      this.setState({\n        gaugeVal: snap.val()\n      });\n    });\n    \n  }\n\n  render(){\n    return(\n    <div>\n     <Gauge\n      value={this.state.gaugeVal}\n      min={this.props.minVal}\n      max={parseInt(this.props.maxVal)}\n      label={this.props.name}\n    />\n      {console.log(this.state.gaugeVal)}\n   </div>\n    )\n  }\n  }"]},"metadata":{},"sourceType":"module"}