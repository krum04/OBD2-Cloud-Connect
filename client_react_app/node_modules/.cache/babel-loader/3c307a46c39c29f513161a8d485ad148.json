{"ast":null,"code":"import _classCallCheck from \"/home/andy/Desktop/Python/rbs/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/andy/Desktop/Python/rbs/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/andy/Desktop/Python/rbs/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/andy/Desktop/Python/rbs/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/andy/Desktop/Python/rbs/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/andy/Desktop/Python/rbs/test/src/components/gauges/DataGauge.jsx\";\nimport React, { Component } from 'react';\nimport { firebaseDatabase } from \"./firebase\";\nimport Gauge from \"react-svg-gauge\";\nimport './DataGauge.css';\n\nvar DataGauge =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DataGauge, _Component);\n\n  function DataGauge(props) {\n    var _this;\n\n    _classCallCheck(this, DataGauge);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataGauge).call(this, props));\n    var keyVal = _this.props.keyVal;\n    var devId = _this.props.devId; //console.log('This is props')\n    //console.log(this.props.name)\n\n    _this.firebaseDatabase = firebaseDatabase;\n    _this.database = _this.firebaseDatabase.ref(devId).child('data').child(keyVal);\n    _this.state = {\n      gaugeVal: 0\n    };\n    return _this;\n  }\n\n  _createClass(DataGauge, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.database.on(\"value\", function (snap) {\n        _this2.setState({\n          gaugeVal: snap.val()\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        class: \"dGauge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Gauge, {\n        value: Math.round(this.state.gaugeVal),\n        min: this.props.minVal,\n        max: parseInt(this.props.maxVal),\n        label: this.props.name,\n        color: \"#2892D7\" //backgroundColor = \"#2892D7\"\n        ,\n        width: \"200\",\n        height: \"200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), console.log(this.state.gaugeVal));\n    }\n  }]);\n\n  return DataGauge;\n}(Component);\n\nexport { DataGauge as default };","map":{"version":3,"sources":["/home/andy/Desktop/Python/rbs/test/src/components/gauges/DataGauge.jsx"],"names":["React","Component","firebaseDatabase","Gauge","DataGauge","props","keyVal","devId","database","ref","child","state","gaugeVal","on","snap","setState","val","Math","round","minVal","parseInt","maxVal","name","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAO,iBAAP;;IAEqBC,S;;;;;AAEnB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AACA,QAAIC,MAAM,GAAG,MAAKD,KAAL,CAAWC,MAAxB;AACA,QAAIC,KAAK,GAAG,MAAKF,KAAL,CAAWE,KAAvB,CAHiB,CAIjB;AACA;;AACA,UAAKL,gBAAL,GAAwBA,gBAAxB;AACA,UAAKM,QAAL,GAAgB,MAAKN,gBAAL,CAAsBO,GAAtB,CAA0BF,KAA1B,EAAiCG,KAAjC,CAAuC,MAAvC,EAA+CA,KAA/C,CAAqDJ,MAArD,CAAhB;AAIA,UAAKK,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAXiB;AAclB;;;;wCACmB;AAAA;;AAClB,WAAKJ,QAAL,CAAcK,EAAd,CAAiB,OAAjB,EAA0B,UAAAC,IAAI,EAAI;AAChC,QAAA,MAAI,CAACC,QAAL,CAAc;AACZH,UAAAA,QAAQ,EAAEE,IAAI,CAACE,GAAL;AADE,SAAd;AAGD,OAJD;AAOD;;;6BAEO;AACN,aACA;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,KAAD;AACC,QAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAW,KAAKP,KAAL,CAAWC,QAAtB,CADR;AAEC,QAAA,GAAG,EAAE,KAAKP,KAAL,CAAWc,MAFjB;AAGC,QAAA,GAAG,EAAEC,QAAQ,CAAC,KAAKf,KAAL,CAAWgB,MAAZ,CAHd;AAIC,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWiB,IAJnB;AAKC,QAAA,KAAK,EAAC,SALP,CAMC;AAND;AAOC,QAAA,KAAK,EAAC,KAPP;AAQC,QAAA,MAAM,EAAC,KARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAaGC,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWC,QAAvB,CAbH,CADA;AAiBD;;;;EA7CoCX,S;;SAAlBG,S","sourcesContent":["import React, { Component } from 'react';\nimport { firebaseDatabase } from \"./firebase\";\nimport Gauge from \"react-svg-gauge\";\nimport './DataGauge.css';\n\nexport default class DataGauge extends Component{\n\n  constructor(props) {\n    super(props);\n    var keyVal = this.props.keyVal\n    var devId = this.props.devId\n    //console.log('This is props')\n    //console.log(this.props.name)\n    this.firebaseDatabase = firebaseDatabase;\n    this.database = this.firebaseDatabase.ref(devId).child('data').child(keyVal);\n    \n    \n    \n    this.state = {\n      gaugeVal: 0,\n      };\n  }\n  componentDidMount() {\n    this.database.on(\"value\", snap => {\n      this.setState({\n        gaugeVal: snap.val()\n      });\n    });\n    \n    \n  }\n\n  render(){\n    return(\n    <div class=\"dGauge\">\n     <Gauge\n      value={Math.round(this.state.gaugeVal)}\n      min={this.props.minVal}\n      max={parseInt(this.props.maxVal)}\n      label={this.props.name}\n      color='#2892D7'\n      //backgroundColor = \"#2892D7\"\n      width='200'\n      height='200'\n    \n      \n    />\n      {console.log(this.state.gaugeVal)}\n   </div>\n    )\n  }\n  }"]},"metadata":{},"sourceType":"module"}