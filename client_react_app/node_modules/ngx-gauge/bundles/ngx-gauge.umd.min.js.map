{"version":3,"file":"ngx-gauge.umd.min.js","sources":["~/ngx-gauge/src/common/util.ts","~/ngx-gauge/src/gauge/gauge-directives.ts","~/ngx-gauge/src/gauge/gauge.ts","~/ngx-gauge/src/ngx-gauge.module.ts"],"sourcesContent":["\n/**\n * @param {?} value\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\nexport function clamp(value: number, min: number, max: number): number {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function coerceBooleanProperty(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n/**\n * @param {?} value\n * @param {?=} fallbackValue\n * @return {?}\n */\nexport function coerceNumberProperty(value: any, fallbackValue: number = 0): number {\n    return isNaN(parseFloat(value)) || isNaN(Number(value)) ? fallbackValue : Number(value);\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function cssUnit(value: number) {\n    return `${value}px`;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isNumber(value: string) {\n    return value != undefined && !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}","import { Directive } from '@angular/core';\nexport class NgxGaugeAppend {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: \"ngx-gauge-append\",\n  exportAs: \"ngxGaugeAppend\"\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgxGaugeAppend_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxGaugeAppend.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxGaugeAppend.ctorParameters;\n}\n\nexport class NgxGaugePrepend {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: \"ngx-gauge-prepend\",\n  exportAs: \"ngxGaugePrepend\"\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgxGaugePrepend_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxGaugePrepend.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxGaugePrepend.ctorParameters;\n}\n\nexport class NgxGaugeValue {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: \"ngx-gauge-value\",\n  exportAs: \"ngxGaugeValue\"\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgxGaugeValue_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxGaugeValue.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxGaugeValue.ctorParameters;\n}\n\nexport class NgxGaugeLabel {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: \"ngx-gauge-label\",\n  exportAs: \"ngxGaugeLabel\"\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgxGaugeLabel_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxGaugeLabel.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxGaugeLabel.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n    Component,\n    Input,\n    SimpleChanges,\n    ViewEncapsulation,\n    Renderer,\n    AfterViewInit,\n    ElementRef,\n    OnChanges,\n    OnDestroy,\n    ViewChild, \n    ContentChild\n} from '@angular/core';\nimport { NgxGaugeError } from './gauge-error';\nimport {\n    clamp,\n    coerceBooleanProperty,\n    coerceNumberProperty,\n    cssUnit,\n    isNumber\n} from '../common/util';\nimport { NgxGaugeLabel, NgxGaugeValue, NgxGaugePrepend, NgxGaugeAppend } from './gauge-directives';\n\nconst /** @type {?} */ DEFAULTS = {\n    MIN: 0,\n    MAX: 100,\n    TYPE: 'arch',\n    THICK: 4,\n    FOREGROUND_COLOR: 'rgba(0, 150, 136, 1)',\n    BACKGROUND_COLOR: 'rgba(0, 0, 0, 0.1)',\n    CAP: 'butt',\n    SIZE: 200\n};\n\nexport type NgxGaugeType = 'full' | 'arch' | 'semi';\nexport type NgxGaugeCap = 'round' | 'butt';\nexport class NgxGauge implements AfterViewInit, OnChanges, OnDestroy {\n\n     _canvas: ElementRef;\n    \n     _labelChild: NgxGaugeLabel;\n     _prependChild: NgxGaugePrepend;\n     _appendChild: NgxGaugeAppend;\n     _valueDisplayChild: NgxGaugeValue;\nprivate _size: number = DEFAULTS.SIZE;\nprivate _min: number = DEFAULTS.MIN;\nprivate _max: number = DEFAULTS.MAX;\nprivate _initialized: boolean = false;\nprivate _context: CanvasRenderingContext2D;\nprivate _animationRequestID: number = 0;\n/**\n * @return {?}\n */\nget size(): number { return this._size; }\n/**\n * @param {?} value\n * @return {?}\n */\nset size(value: number) {\n        this._size = coerceNumberProperty(value);\n    }\n/**\n * @return {?}\n */\nget min(): number { return this._min; }\n/**\n * @param {?} value\n * @return {?}\n */\nset min(value: number) {\n        this._min = coerceNumberProperty(value, DEFAULTS.MIN);\n    }\n\n     max: number = DEFAULTS.MAX;\n\n     type: NgxGaugeType = /** @type {?} */(( DEFAULTS.TYPE as NgxGaugeType));\n\n     cap: NgxGaugeCap = /** @type {?} */(( DEFAULTS.CAP as NgxGaugeCap));\n\n     thick: number = DEFAULTS.THICK;\n\n     label: string;\n\n     append: string;\n\n     prepend: string;\n\n     foregroundColor: string = DEFAULTS.FOREGROUND_COLOR;\n\n     backgroundColor: string = DEFAULTS.BACKGROUND_COLOR;\n\n     thresholds: Object = Object.create(null);\nprivate _value: number = 0;\n/**\n * @return {?}\n */\nget value() { return this._value; }\n/**\n * @param {?} val\n * @return {?}\n */\nset value(val: number) {\n        this._value = coerceNumberProperty(val);\n    }\n\n     duration: number = 1200;\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n */\nconstructor(private _elementRef: ElementRef,\nprivate _renderer: Renderer) { }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        const /** @type {?} */ isTextChanged = changes['label'] || changes['append'] || changes['prepend'];\n        const /** @type {?} */ isDataChanged = changes['value'] || changes['min'] || changes['max'];\n\n        if (this._initialized) {\n            if (isDataChanged) {\n                let /** @type {?} */ nv, /** @type {?} */ ov;\n                if (changes['value']) {\n                    nv = changes['value'].currentValue;\n                    ov = changes['value'].previousValue;\n                }\n                this._update(nv, ov);\n            } else if (!isTextChanged) {\n                this._destroy();\n                this._init();\n            }\n        }\n    }\n/**\n * @return {?}\n */\nprivate _updateSize() {\n        this._renderer.setElementStyle(this._elementRef.nativeElement, 'width', cssUnit(this._size));\n        this._renderer.setElementStyle(this._elementRef.nativeElement, 'height', cssUnit(this._size));\n    }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        if (this._canvas) {\n            this._init();\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._destroy();\n    }\n/**\n * @param {?} type\n * @return {?}\n */\nprivate _getBounds(type: NgxGaugeType) {\n        let /** @type {?} */ head, /** @type {?} */ tail;\n        if (type == 'semi') {\n            head = Math.PI;\n            tail = 2 * Math.PI;\n        } else if (type == 'full') {\n            head = 1.5 * Math.PI;\n            tail = 3.5 * Math.PI;\n        } else if (type === 'arch') {\n            head = 0.8 * Math.PI;\n            tail = 2.2 * Math.PI;\n        }\n        return { head, tail };\n    }\n/**\n * @param {?} start\n * @param {?} middle\n * @param {?} tail\n * @param {?} color\n * @return {?}\n */\nprivate _drawShell(start: number, middle: number, tail: number, color: string) {\n        let /** @type {?} */ center = this._getCenter(), /** @type {?} */\n            radius = this._getRadius();\n\n        middle = Math.max(middle, start); // never below 0%\n        middle = Math.min(middle, tail); // never exceed 100%\n\n        this._clear();\n        this._context.beginPath();\n        this._context.strokeStyle = this.backgroundColor;\n        this._context.arc(center.x, center.y, radius, middle, tail, false);\n        this._context.stroke();\n\n        this._context.beginPath();\n        this._context.strokeStyle = color;\n        this._context.arc(center.x, center.y, radius, start, middle, false);\n        this._context.stroke();\n\n    }\n/**\n * @return {?}\n */\nprivate _clear() {\n        this._context.clearRect(0, 0, this._getWidth(), this._getHeight());\n    }\n/**\n * @return {?}\n */\nprivate _getWidth() {\n        return this.size;\n    }\n/**\n * @return {?}\n */\nprivate _getHeight() {\n        return this.size;\n    }\n/**\n * @return {?}\n */\nprivate _getRadius() {\n        var /** @type {?} */ center = this._getCenter();\n        return center.x - this.thick;\n    }\n/**\n * @return {?}\n */\nprivate _getCenter() {\n        var /** @type {?} */ x = this._getWidth() / 2, /** @type {?} */\n            y = this._getHeight() / 2;\n        return { x, y };\n    }\n/**\n * @return {?}\n */\nprivate _init() {\n        this._context = ( /** @type {?} */((this._canvas.nativeElement as HTMLCanvasElement))).getContext('2d');\n        this._initialized = true;\n        this._updateSize();\n        this._setupStyles();\n        this._create();\n    }\n/**\n * @return {?}\n */\nprivate _destroy() {\n        if (this._animationRequestID) {\n            window.cancelAnimationFrame(this._animationRequestID);\n            this._animationRequestID = 0;\n        }\n        this._clear();\n        this._context = null;\n    }\n/**\n * @return {?}\n */\nprivate _setupStyles() {\n        this._context.canvas.width = this.size;\n        this._context.canvas.height = this.size;\n        this._context.lineCap = this.cap;\n        this._context.lineWidth = this.thick;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _getForegroundColorByRange(value) {\n\n        const /** @type {?} */ match = Object.keys(this.thresholds)\n            .filter(function (item) { return isNumber(item) && Number(item) <= value })\n            .sort((a, b) => Number(a) - Number(b))\n            .reverse()[0];\n\n        return match !== undefined\n            ? this.thresholds[match].color || this.foregroundColor\n            : this.foregroundColor;\n    }\n/**\n * @param {?=} nv\n * @param {?=} ov\n * @return {?}\n */\nprivate _create(nv?: number, ov?: number) {\n        let /** @type {?} */ self = this, /** @type {?} */\n            type = this.type, /** @type {?} */\n            bounds = this._getBounds(type), /** @type {?} */\n            duration = this.duration, /** @type {?} */\n            min = this.min, /** @type {?} */\n            max = this.max, /** @type {?} */\n            value = clamp(this.value, this.min, this.max), /** @type {?} */\n            start = bounds.head, /** @type {?} */\n            unit = (bounds.tail - bounds.head) / (max - min), /** @type {?} */\n            displacement = unit * (value - min), /** @type {?} */\n            tail = bounds.tail, /** @type {?} */\n            color = this._getForegroundColorByRange(value), /** @type {?} */\n            startTime;\n\n        if (nv != undefined && ov != undefined) {\n            displacement = unit * nv - unit * ov;\n        }\n/**\n * @param {?} timestamp\n * @return {?}\n */\nfunction animate(timestamp) {\n            timestamp = timestamp || new Date().getTime();\n            let /** @type {?} */ runtime = timestamp - startTime;\n            let /** @type {?} */ progress = Math.min(runtime / duration, 1);\n            let /** @type {?} */ previousProgress = ov ? ov * unit : 0;\n            let /** @type {?} */ middle = start + previousProgress + displacement * progress;\n\n            self._drawShell(start, middle, tail, color);\n            if (self._animationRequestID && (runtime < duration)) {\n                self._animationRequestID = window.requestAnimationFrame((timestamp) => animate(timestamp));\n            } else {\n                window.cancelAnimationFrame(self._animationRequestID);\n            }\n        }\n\n        self._animationRequestID = window.requestAnimationFrame((timestamp) => {\n            startTime = timestamp || new Date().getTime();\n            animate(timestamp);\n        });\n    }\n/**\n * @param {?} nv\n * @param {?} ov\n * @return {?}\n */\nprivate _update(nv: number, ov: number) {\n        this._clear();\n        this._create(nv, ov);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ngx-gauge',\n    template: `\n      <div class=\"reading-block\" #reading [style.fontSize]=\"size * 0.22 + 'px'\" [style.lineHeight]=\"size + 'px'\">\n        <!-- This block can not be indented correctly, because line breaks cause layout spacing, related problem: https://pt.stackoverflow.com/q/276760/2998 -->\n        <u class=\"reading-affix\" [ngSwitch]=\"_prependChild != null\"><ng-content select=\"ngx-gauge-prepend\" *ngSwitchCase=\"true\"></ng-content><ng-container *ngSwitchCase=\"false\">{{prepend}}</ng-container></u><ng-container [ngSwitch]=\"_valueDisplayChild != null\"><ng-content *ngSwitchCase=\"true\" select=\"ngx-gauge-value\"></ng-content><ng-container *ngSwitchCase=\"false\">{{value | number}}</ng-container></ng-container><u class=\"reading-affix\" [ngSwitch]=\"_appendChild != null\"><ng-content select=\"ngx-gauge-append\" *ngSwitchCase=\"true\"></ng-content><ng-container *ngSwitchCase=\"false\">{{append}}</ng-container></u>\n      </div>\n      <div class=\"reading-label\" \n           [style.fontSize]=\"size / 13 + 'px'\" \n           [style.lineHeight]=\"(5 * size / 13) + size + 'px'\" \n           [ngSwitch]=\"_labelChild != null\">\n        <ng-content select=\"ngx-gauge-label\" *ngSwitchCase=\"true\"></ng-content>\n        <ng-container *ngSwitchCase=\"false\">{{label}}</ng-container>\n      </div>\n      <canvas #canvas [width]=\"size\" [height]=\"size\"></canvas>\n    `,\n    styles: [`\n      .ngx-gauge-meter {\n          display: inline-block;\n          text-align: center;\n          position: relative;\n      }\n\n      .reading-block {\n          position: absolute;\n          width: 100%;\n          font-weight: normal;\n          white-space: nowrap;\n          text-align: center;\n          overflow: hidden;\n          text-overflow: ellipsis;\n      }\n\n      .reading-label {\n          font-family: inherit;\n          width: 100%;\n          display: inline-block;\n          position: absolute;\n          text-align: center;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          font-weight: normal;\n      }\n\n      .reading-affix {\n          text-decoration: none;\n          font-size: 0.6em;\n          opacity: 0.8;\n          font-weight: 200;\n          padding: 0 0.18em;\n      }\n\n      .reading-affix:first-child {\n          padding-left: 0;\n      }\n\n      .reading-affix:last-child {\n          padding-right: 0;\n      }\n    `],\n    host: {\n        'role': 'meter',\n        '[class.ngx-gauge-meter]': 'true',\n        '[attr.aria-valuemin]': 'min',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-valuenow]': 'value'\n    },\n    encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_canvas': [{ type: ViewChild, args: ['canvas', ] },],\n'_labelChild': [{ type: ContentChild, args: [NgxGaugeLabel, ] },],\n'_prependChild': [{ type: ContentChild, args: [NgxGaugePrepend, ] },],\n'_appendChild': [{ type: ContentChild, args: [NgxGaugeAppend, ] },],\n'_valueDisplayChild': [{ type: ContentChild, args: [NgxGaugeValue, ] },],\n'size': [{ type: Input },],\n'min': [{ type: Input },],\n'max': [{ type: Input },],\n'type': [{ type: Input },],\n'cap': [{ type: Input },],\n'thick': [{ type: Input },],\n'label': [{ type: Input },],\n'append': [{ type: Input },],\n'prepend': [{ type: Input },],\n'foregroundColor': [{ type: Input },],\n'backgroundColor': [{ type: Input },],\n'thresholds': [{ type: Input },],\n'value': [{ type: Input },],\n'duration': [{ type: Input },],\n};\n}\n\nfunction NgxGauge_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxGauge.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxGauge.ctorParameters;\n/** @type {?} */\nNgxGauge.propDecorators;\n/** @type {?} */\nNgxGauge.prototype._canvas;\n/** @type {?} */\nNgxGauge.prototype._labelChild;\n/** @type {?} */\nNgxGauge.prototype._prependChild;\n/** @type {?} */\nNgxGauge.prototype._appendChild;\n/** @type {?} */\nNgxGauge.prototype._valueDisplayChild;\n/** @type {?} */\nNgxGauge.prototype._size;\n/** @type {?} */\nNgxGauge.prototype._min;\n/** @type {?} */\nNgxGauge.prototype._max;\n/** @type {?} */\nNgxGauge.prototype._initialized;\n/** @type {?} */\nNgxGauge.prototype._context;\n/** @type {?} */\nNgxGauge.prototype._animationRequestID;\n/** @type {?} */\nNgxGauge.prototype.max;\n/** @type {?} */\nNgxGauge.prototype.type;\n/** @type {?} */\nNgxGauge.prototype.cap;\n/** @type {?} */\nNgxGauge.prototype.thick;\n/** @type {?} */\nNgxGauge.prototype.label;\n/** @type {?} */\nNgxGauge.prototype.append;\n/** @type {?} */\nNgxGauge.prototype.prepend;\n/** @type {?} */\nNgxGauge.prototype.foregroundColor;\n/** @type {?} */\nNgxGauge.prototype.backgroundColor;\n/** @type {?} */\nNgxGauge.prototype.thresholds;\n/** @type {?} */\nNgxGauge.prototype._value;\n/** @type {?} */\nNgxGauge.prototype.duration;\n/** @type {?} */\nNgxGauge.prototype._elementRef;\n/** @type {?} */\nNgxGauge.prototype._renderer;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxGauge } from './gauge/gauge';\nimport { NgxGaugeLabel, NgxGaugeValue, NgxGaugePrepend, NgxGaugeAppend } from './gauge/gauge-directives';\nexport class NgxGaugeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  declarations: [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel],\n  exports: [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgxGaugeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxGaugeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxGaugeModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["coerceNumberProperty","value","fallbackValue","isNaN","parseFloat","Number","cssUnit","NgxGaugeAppend","decorators","type","Directive","args","selector","exportAs","ctorParameters","NgxGaugePrepend","NgxGaugeValue","NgxGaugeLabel","DEFAULTS","MIN","MAX","TYPE","THICK","FOREGROUND_COLOR","BACKGROUND_COLOR","CAP","SIZE","NgxGauge","_elementRef","_renderer","this","_size","_min","_max","_initialized","_animationRequestID","max","cap","thick","foregroundColor","backgroundColor","thresholds","Object","create","_value","duration","defineProperty","prototype","get","set","val","ngOnChanges","changes","isTextChanged","isDataChanged","nv","ov","currentValue","previousValue","_update","_destroy","_init","_updateSize","setElementStyle","nativeElement","ngAfterViewInit","_canvas","ngOnDestroy","_getBounds","head","tail","Math","PI","_drawShell","start","middle","color","center","_getCenter","radius","_getRadius","min","_clear","_context","beginPath","strokeStyle","arc","x","y","stroke","clearRect","_getWidth","_getHeight","size","getContext","_setupStyles","_create","window","cancelAnimationFrame","canvas","width","height","lineCap","lineWidth","_getForegroundColorByRange","match","keys","filter","item","undefined","sort","a","b","reverse","startTime","self","bounds","unit","displacement","requestAnimationFrame","timestamp","Date","getTime","animate","runtime","progress","Component","template","styles","host","role","[class.ngx-gauge-meter]","[attr.aria-valuemin]","[attr.aria-valuemax]","[attr.aria-valuenow]","encapsulation","ViewEncapsulation","None","ElementRef","Renderer","propDecorators","ViewChild","_labelChild","ContentChild","_prependChild","_appendChild","_valueDisplayChild","Input","label","append","prepend","NgxGaugeModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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"}
